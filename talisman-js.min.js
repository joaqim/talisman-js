class Character{constructor(e,t,a,r,s,n="neutral"){this.state={name:e,type:"character",alignment:n,strength:t,craft:a,lives:r,fate:s,strengthMin:t,craftMin:a,livesMax:r,fateMax:s,spells:[],items:[],followers:[],carryLimit:4,cardDraw:1,curCard:null,cardsDrawn:[]}}update(){for(var e=0;e<this.state.items.length;e++)this.state.items[e].update()}drawCard(e=0){const t=e+this.state.cardDraw;console.log(`${this.state.name} has drawn ${t} card(s)`);for(var a=0;a<t;a++)this.state.cardsDrawn.push("Card #"+a)}discardCard(e){e.decks.discard.push(e)}addFollower(e){e.added(this),this.state.followers.push(e)}removeFollower(e){return e.removed(this)}useItem(e){return e.requirementUse(this)?(e.use(this),!0):(console.log(`${this.state.name} does not fulfill the requirements to use ${e.state.name}: ${e.state.requirement_text.use}`),!1)}addItem(e){return e.requirementPickup(this)?this.hasMaxItems()?(console.log(`${this.state.name} has too many items (${this.state.carryLimit}/${this.state.carryLimit})`),!1):(console.log(`${this.state.name} picked up ${e.state.name}`),e.added(this),this.state.items.push(e),!0):(console.log(`${this.state.name} does not fulfill the requirements of ${e.state.name}: ${e.state.requirement_text.pickup}`),!1)}removeItem(e){return e.removed(this)}drawSpell(){this.state.spells.push("a new Spell"),console.log(this.state.name+" drew a new Spell")}addSpell(e){this.state.spells.push(e),console.log(`${this.state.name} drew ${e}`)}useSpell(e,t=null){return this.state.spells=[],!!castSpell(this,e,t)}spellCount(){return this.state.spells.length}hasMaxSpells(){return Math.floor(this.state.craft/2)<=this.spellCount()}hasMaxItems(){return this.state.itemMax<=this.state.items.length}}class Entity{constructor(e,t,a=null){this.state={name:e,type:t,owner:a,requirement_text:{use:"",pickup:""}}}update(){}added(e){this.state.owner=e}removed(){this.state.owner=null}use(e,t=null){console.log`${e.state.name} used ${this.state.name}`}requirementUse(e){return!0}requirementPickup(e){return!0}}function drawSpell(e){e.hasMaxSpells()?console.log(e.state.name+" cannot draw a Spell: has max spells!"):e.addSpell("a new spell")}function castSpell(e,t,a=null){return e.state.spells.pop(),console.log(`${e.state.name} casts spell: ${t}!`),!0}function always_one_spell(e){let t=e.update.bind(e);return e.update=()=>{t(),"character"==e.state.type?0==e.state.spells.length&&e.drawSpell():0==e.state.owner.state.spells.length&&e.state.owner(drawSpell)},e}function may_discard_first_drawn_adventure_card(e){e.drawFn=e.drawCard.bind(e),e.drawCard=(t=0)=>{const a=t+e.state.cardDraw;for(var r=1;r<a+1;r++)console.log(`${e.state.name} has drawn ${r}/${a} card(s)`)}}function draw_extra_cards(e,t=1){e.added=e=>{addFn(e),e.state.cardDraw+=t};let a=e.removed.bind(e);e.removed=e=>{e.state.carryLimit-=t,a()}}function carry_limit_increase(e,t=4){let a=e.added.bind(e);e.added=e=>{a(e);for(var r=document.getElementById("inventory").getElementsByTagName("tbody")[0],s=document.createElement("tr"),n=e.state.carryLimit+1;n-1<e.state.carryLimit+t;n++){var l=document.createElement("td");l.id="i"+n,l.setAttribute("class","slot"),s.appendChild(l),n%4==0&&(r.appendChild(s),s=document.createElement("tr"))}e.state.carryLimit+=t};let r=e.removed.bind(e);return e.removed=e=>{for(var a=document.getElementById("inventory").getElementsByTagName("tbody")[0],s=0;s<t/4;s++)a.deleteRow(a.rows-s);e.state.carryLimit-=t,r()},e}function discard_on_remove(e){let t=e.removed.bind(e);return e.removed=()=>(t(),!1),e}function required_alignment_to_use(e,t,a=!1){let r=e.requirementUse.bind(e);return e.state.requirement_text.use=`no ${t} characters can use this ${e.state.type}`,e.requirementUse=e=>e.state.alignment===t!==a&&r(),e}function required_alignment_to_pickup(e,t,a=!1){let r=e.requirementPickup.bind(e);return e.state.requirement_text.pickup=`no ${t} characters can have this ${e.state.type}`,e.requirementPickup=e=>e.state.alignment===t!==a&&r(),e}const required_alignment_to_pickup_NOT=(e,t)=>required_alignment_to_pickup(e,t,!0),required_alignment_to_use_NOT=(e,t)=>required_alignment_to_use(e,t,!0);class Prophetess extends Character{constructor(){super("Prophetess",2,4,4,2,"good"),always_one_spell(this),may_discard_first_drawn_adventure_card(this)}}var p=new Prophetess;p.update();var crystal_ball=new Entity("crystal_ball","magical_item");always_one_spell(crystal_ball);var mule=new Entity("mule","follower");carry_limit_increase(mule,4);var horse_and_carts=new Entity("horse_and_carts","follower");carry_limit_increase(horse_and_carts,8);var holy_grail=new Entity("holy_grail","magical_item");required_alignment_to_pickup(holy_grail,"good");var rune_sword=new Entity("rune_sword","magical_weapon");required_alignment_to_use_NOT(rune_sword,"good"),p.useSpell("Random"),p.update(),p.addItem(holy_grail),p.addItem(rune_sword),p.useItem(rune_sword),p.addItem(crystal_ball),p.update(),p.addItem(mule),p.update(),p.drawCard(),console.log(p.state.carryLimit);const SIDES=6;function rollDice(e,t=6){var a=0;for(i=1;i<=e;i++)a+=Math.floor(Math.random()*t+1);return a}const d3d6=()=>rollDice(3,6);function skillCheck(e,t=2){return e.value-rollDice(t)}